// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using intern_ally.Data;

namespace intern_ally.Migrations
{
    [DbContext(typeof(MvcInternContext))]
    [Migration("20200806075244_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("intern_ally.Models.Intern", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrentJobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Intern");
                });

            modelBuilder.Entity("intern_ally.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SkillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("internId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.HasIndex("internId");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("intern_ally.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InternId")
                        .HasColumnType("int");

                    b.Property<int>("MonthsExperience")
                        .HasColumnType("int");

                    b.Property<string>("SkillType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearsExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InternId");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("intern_ally.Models.SocialMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("internId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("internId");

                    b.ToTable("SocialMedia");
                });

            modelBuilder.Entity("intern_ally.Models.Job", b =>
                {
                    b.HasOne("intern_ally.Models.Skill", null)
                        .WithMany("Jobs")
                        .HasForeignKey("SkillId");

                    b.HasOne("intern_ally.Models.Intern", "intern")
                        .WithMany("Jobs")
                        .HasForeignKey("internId");
                });

            modelBuilder.Entity("intern_ally.Models.Skill", b =>
                {
                    b.HasOne("intern_ally.Models.Intern", null)
                        .WithMany("Skills")
                        .HasForeignKey("InternId");
                });

            modelBuilder.Entity("intern_ally.Models.SocialMedia", b =>
                {
                    b.HasOne("intern_ally.Models.Intern", "intern")
                        .WithMany("SocialMedia")
                        .HasForeignKey("internId");
                });
#pragma warning restore 612, 618
        }
    }
}
